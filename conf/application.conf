# https://www.playframework.com/documentation/latest/Configuration

include "application.common.conf"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="rpkTGtoJvLIdIV?WU=0@yW^x:pcEGyAt`^p/P3G0fpbj9:uDnD@caSjCDqA0@tB="

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

play.http.errorHandler = "controllers.CustomErrorHandler"

play.modules.enabled += "modules.SecurityModule"

# urls
fbId="145278422258960"
fbSecret="be21409ba8f39b5dae2a7de525484da8"
baseUrl="http://localhost:9000"

play.http.filters = "filters.Filters"

pac4j.security {
  rules = [
    {"/facebook.*" = {
      clients = "FacebookClient",
      matchers = "excludedPath"
    }}
    {"/rest-jwt.*" = {
      clients = "ParameterClient"
    }}
  ]
}

play.http.session.sameSite = null


play.filters {
  # CSRF config
  csrf {
    cookie {
      # If non null, the CSRF token will be placed in a cookie with this name
      name = "csrfCookie"
      # Whether the cookie should be set to secure
      secure = false
      # Whether the cookie should have the HTTP only flag set
      httpOnly = false
    }
    header {
      # The name of the header to accept CSRF tokens from.
      name = "Csrf-Token"
    }
  }
  cors {
    pathPrefixes = ["/"]
    allowedOrigins = ["http://localhost:3000", ${?CUSTOM_ALLOWED_ORIGIN}]
    supportsCredentials=true
    allowedHttpMethods = ["GET", "POST", "PUT", "OPTIONS", "DELETE"]
    allowedHttpHeaders = ["Accept", "Origin", "Content-Type", "X-Auth-Token", "X-AUTH-API-TOKEN",
       ${play.filters.csrf.header.name}]
  }
}



